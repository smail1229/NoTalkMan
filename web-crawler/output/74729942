电脑/网络 编程语言 C/C++ 
C语言表达式求值
<br /><br />大哥大姐们快来帮个忙吧。；另一个称作OPND。用栈结构实现<br /><br />可以使用两个工作栈,用以存放操作数和运算结果,用以存放运算符。一个称作OPTR。
break; &#39, 1:<br />      case DIVIDE,&#39,OPTR[STACKSIZE];<br />                  }<br />         break;=&#39;<br />     }<br />      if(num==4) break.0;&#39;<br />  char str[256];=&#39,<br />                       { 1;:<br />        if(str[0]==0)<br />          { printf(&quot;<br />          }<br /><br />case RIGHP;%lf&quot:<br />          number=0;<br />          break;<br />          temp=temp*10;break;%s&#92;<br />    printf(&quot,-1;<br />   topNd=0;<br />          }<br />           else  return(0);;9&#39,&#39;0&#39;%d&quot;<br />            topTr++, 1};n&quot;<br />          }<br /><br />      case STARTEND;=&#39;i++) if(ch==a[i]) return(i),-1,<br />                           {-1,-1;),temp:<br />      case POWER,&result))<br />        { printf(&quot,&#39:<br />        number=0!&#92;<br />   scanf(&quot;<br />        }<br />         if(;<br />    return(-1);1 || num&gt;<br />    else if(j==1)OPND[topNd-2]=OPND[topNd-2]-OPND[topNd-1];<br />           }<br />        if(str[pp]==&#39;<br />int menu(void),<br />                           { 1;/,<br />                       { 1;<br />   str[len]=&#39;<br />          topNd++;n&quot,&#39;<br />             pp++;<br />    printf(&quot;<br />           }<br />           }<br />          OPND[topNd]=number;)&#39;<br />        break;=&#39;0&#39, 1, 1},-1;<br />   }<br />int EXCUTE(char *str:<br />      case MINUS;),-1;<br />     }<br />    OPTR[topTr]=CharType;};<br />                      topNd--,topTr,-1; &#39;<br />      }<br />  }<br />int menu(void)<br />  { int num;<br />    printf(&quot,4, 1;)<br />           { number=number*10+(str[pp]-48);<br />                break,NO;);=&#39, 1,3;;%20c2--calculation expression&#92.h&gt:&#92;<br />     if(j==1)OPND[topNd-2]=OPND[topNd-2]-OPND[topNd-1];<br />      }while(num&lt;<br />          pp++, 1;%20c1--input expression&#92;<br />  while(1)<br />    { num=menu();<br />    else if(j==2)OPND[topNd-2]=OPND[topNd-2]*OPND[topNd-1],str); &#39,-1;pp++, 1;);<br />          if(i==-1)<br />           {OPTR[topTr]=CharType;<br />         while(str[pp]&gt;0&#39;<br />            topNd--;n&quot,-1:<br />        InputExpression(str);<br /><br />   OPTR[0]=STARTEND, 1;(&#39, 1;9&#39;<br />     else if(j==3)OPND[topNd-2]=OPND[topNd-2]&#47, 1;<br />        printf(&quot;9&#39;9&#39;<br />          pp++;<br />         }<br /><br />if(topNd==1)<br />          { *Result=OPND[0],&#39;<br />          }<br />      case LEFTP;, 1}, 1;) return(POINT);<br />                      topTr--,<br />                           {-1,&#39;n&quot,str;*&#39; && str[pp]&lt,PriorityTable[7][7]={{ 1;;<br />    printf(&quot,&#39;<br />          while(str[pp]&gt;;<br />    clrscr(),&#39,-1;<br />          i=PriorityTable[OPTR[topTr-1]][CharType];<br />void<br /> InputExpression(char str[])<br /> { int len;#&#39, 0}<br />                      }:<br /><br />   {int i,-1;%20c4--Quit&#92,&num);NUM;<br />     case 3;<br />     else if(j==1)OPND[topNd-2]=OPND[topNd-2]-OPND[topNd-1];<br />      }<br /><br />       }<br />    return(1<br />    );conio;<br />     else<br />     {j=OPTR[topTr-1];temp;<br />                      topNd--;;<br />                  }<br />             else<br />                { printf(&quot;n&quot, 1;<br />      switch(num)<br />       {<br />     case 1;<br />     else if(j==2)OPND[topNd-2]=OPND[topNd-2]*OPND[topNd-1]; &#39;)<br />           { temp=10;,number),&#39;;;<br />                  flag=1!EXCUTE(str,-1,result);         please select 1;<br />         pp++,topNd;}<br />     else if(OPTR[topTr-1]==STARTEND)return(0);<br />   topTr=1;printf(&quot, 1},-1;<br />           topTr++;<br />     if(j==0)OPND[topNd-2]=OPND[topNd-2]+OPND[topNd-1];<br />      do{<br />      scanf(&quot;<br />               }<br />        break;<br />   str[len+1]=&#39,-1;<br />          break;temp;);n&quot.0:<br />   { while(1)<br />     if(OPTR[topTr-1]==LEFTP){topTr--,CharType!=STARTEND)<br />    {<br />    j=OPTR[topTr-1];topTr++, 0,strlength;<br />   printf(&quot;<br />  double result;%20c3--print result&#92;calulation has finished;;The expression has error;)!&quot; && str[pp]&lt;);0&#39;<br />             pp++;<br />          temp=10;<br />        while<br /><br />(str[pp]&gt;i&lt, 1;n&quot;<br />     }<br />      break;)<br />           { number=number+(str[pp]-48)/=&#39,str);<br />   }<br />int GetCharType(char ch)<br /> {  int i;<br />      case POINT;<br />                  getchar(),OPND[STACKSIZE], NO};#&#39:<br /><br />       while(OPTR[topTr-1]:<br />        return(0);<br />     if(j==3)OPND[topNd-2]=OPND[topNd-2]&#47,-1, 1;<br />        getchar():&quot;<br />        flag=0, 1;<br />      switch(CharType)<br />       { case -1;<br />   pp=0,NO,2;<br />                      topTr--;<br />     case DIGIT;<br />   len=strlen(str);<br />    if(ch&gt:<br />          {<br /><br />OPTR[topTr]=LEFTP;Input expression string; && ch&lt;<br />     case 4;<br />#include &lt;<br />    printf(&quot;OPND[topNd-1];%s&quot:<br />        break;OPND[topNd-1];, 1,<br />                           { 1;);;<br /><br />#define PLUS  0<br />#define MINUS 1<br />#define POWER 2<br />#define DIVIDE 3<br />#define LEFTP 4<br />#define RIGHP 5<br />#define STARTEND 6<br />#define DIGIT  7<br />#define POINT  8<br /><br />#define NUM 7<br />#define NO  32767<br />#define STACKSIZE 20<br />  char a[]={&#39;#%s=%lf&#92：<br /><br />#include&lt;<br />   }<br />void main()<br />{ int num,-1;return(1);<br />             temp=temp*10;<br />           break;<br />            i=PriorityTable[OPTR[topTr-1]][CharType];<br />     topTr--;;);<br />        getchar();n&quot,double *Result)<br /> {<br />   int pp;pp++;<br />           }<br />   if(i==1)<br />    {while(i==1)<br />     {<br />     j=OPTR[topTr-1];<br />     if(j==0)OPND[topNd-2]=OPND[topNd-2]+OPND[topNd-1],a;) return(DIGIT);; && str[pp]&lt;n&quot.&#39;<br /><br />case 2;<br />        getchar();Expresson  is Empty;<br /><br />case PLUS;=&#39;<br />  str[0]=0;;=&#39;&#92.&#39:<br />        if(flag)<br />          { printf(&quot,&#39;stdio;<br />   double number;<br />          getchar();<br />  int j!&#92,flag;<br />    }<br />    pp++;-&#39;<br />    else if(j==3)OPND[topNd-2]=OPND[topNd-2]&#47,-1;<br />        getchar();)<br />        { number=number+(str[pp]-48)/<br />          topNd++要是没人回答的话 周末给你找找看 以前写过不知道还在不<br />运行<br />按1输入表达式（不用输入＝号）<br />按2计算<br />按3输出结果<br />按4退出<br /><br />程序如下;;<br />    return(num);<br />        }<br />          OPND[topNd]=number;OPND[topNd-1];+&#39.h&gt;<br />   while((str[pp]))<br />    { CharType=GetCharType(str[pp]), 1}.h&gt;<br />    if(ch==&#39;<br />    for(i=0;string, 1;;<br />        getchar();4);<br />     if(j==2)OPND[topNd-2]=OPND[topNd-2]*OPND[topNd-1];0&#39;<br />#include &lt;<br />    if(j==0)OPND[topNd-2]=OPND[topNd-2]+OPND[topNd-1]
7
none
http://zhidao.baidu.com/question/6001567.html?qbl=relate_question_0
http://zhidao.baidu.com/question/210509677.html?qbl=relate_question_1
http://zhidao.baidu.com/question/139345845.html?qbl=relate_question_2
http://zhidao.baidu.com/question/27948817.html?qbl=relate_question_3
http://zhidao.baidu.com/question/354302094.html?qbl=relate_question_4
