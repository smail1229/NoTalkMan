电脑/网络 编程语言 C/C++ 
C语言中char类型中的有符号与无符号的区别和意义？
none
chinaunix，但是这取决于编译器.net/thread-889260-1-1char相当于signed char或者unsigned char，可以保存256个不同的值://bbs.net/thread-889260-1-1.html" target="_blank">http，但是char不能简单以为＝＝signed char<br /><br />要确定char究竟等同什么要基于不同的编译器做测试<br />（这里讲的比较详细<br /><a href="http？。<br />signed char取值范围是 -128 到 127<br />unsigned char 取值范围是 0 到 255<br /><br />但是char究竟相当于signed char呢还是相当于unsigned char呢://bbs？<br />这就是char和int的不同之处！<br />int＝＝signed int.chinaunix！<br />这三种字符类型都是按照1个字节存储的
17
<p>在C中，默认的基础数据类型均为signed，现在我们以char为例，说明(signed) char与unsigned char之间的区别。</p><p>&nbsp; &nbsp; &nbsp; 首先在内存中，char与unsigned char没有什么不同，都是一个字节，唯一的区别是，char的最高位为符号位，因此char能表示-127~127,unsigned char没有符号位，因此能表示0~255，这个好理解，8个bit，最多256种情况，因此无论如何都能表示256个数字。</p><p>&nbsp; &nbsp; &nbsp; 在实际使用过程种有什么区别呢？主要是符号位，但是在普通的赋值，读写文件和网络字节流都没什么区别，反正就是一个字节，不管最高位是什么，最终的读取结果都一样，只是你怎么理解最高位而已，在屏幕上面的显示可能不一样。</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;二者的最大区别是：但是我们却发现在表示byte时，都用unsigned char，这是为什么呢？首先我们通常意义上理解，byte没有什么符号位之说，更重要的是如果将byte的值赋给int，long等数据类型时，系统会做一些额外的工作。如果是char，那么系统认为最高位是符号位，而int可能是16或者32位，那么会对最高位进行扩展（注意，赋给unsigned int也会扩展）而如果是unsigned char，那么不会扩展。最高位若为0时，二者没有区别，若为1时，则有区别了。同理可以推导到其它的类型，比如short， unsigned short，等等。</p><p>&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;具体可以通过下面的小例子看看其区别</p><p>　　include &lt;stdio.h&gt;</p><p>　　void f(unsigned char v)<br />　　{<br />　　　　char c = v;<br />　　　　unsigned char uc = v;<br />　　　　unsigned int a = c, b = uc;<br />　　　　int i = c, j = uc;<br />　　　　printf(&quot;----------------\n&quot;);<br />　　　　printf(&quot;%%c: %c, %c\n&quot;, c, uc);<br />　　　　printf(&quot;%%X: %X, %X\n&quot;, c, uc);<br />　　　　printf(&quot;%%u: %u, %u\n&quot;, a, b);<br />　　　　printf(&quot;%%d: %d, %d\n&quot;, i, j);<br />　　}<br />　　</p><p>　　int main(int argc, char *argv[])<br />　　{<br />　　　　f(0x80);<br />　　　　f(0x7F);<br />　　　　return 0;<br />　　}</p><p><br />　　 &nbsp;结果输出如下：</p><p>　　 &nbsp;</p><p><a href="http://h.hiphotos.baidu.com/zhidao/pic/item/4ec2d5628535e5ddf881f47973c6a7efcf1b62e2.jpg" target="_blank" title="点击查看大图" class="ikqb_img_alink"><img class="ikqb_img" src="http://h.hiphotos.baidu.com/zhidao/wh%3D600%2C800/sign=6d1b2386bc12c8fcb4a6fecbcc33be7d/4ec2d5628535e5ddf881f47973c6a7efcf1b62e2.jpg" esrc="http://h.hiphotos.baidu.com/zhidao/wh%3D450%2C600/sign=dc6d98959745d688a357baa091f25128/4ec2d5628535e5ddf881f47973c6a7efcf1b62e2.jpg" /></a></p><p>　　 &nbsp;结果分析：</p><p>　　对于(signed)char来说，0x80用二进制表示为1000 0000，当它作为char赋值给unsigned int或 int 时，系统认为最高位是符号位，会对最高位进行扩展。而0x7F用二进制表示为0111 1111，最高位为0，不会扩展。</p><p>　　对于unsigned char来说，不管最高位是0，还是1，都不会做扩展。</p>
http://zhidao.baidu.com/question/89348184.html?qbl=relate_question_0
http://zhidao.baidu.com/question/206441551.html?qbl=relate_question_1
http://zhidao.baidu.com/question/2072029.html?qbl=relate_question_2
http://zhidao.baidu.com/question/422248019.html?qbl=relate_question_3
http://zhidao.baidu.com/question/127394870.html?qbl=relate_question_4
