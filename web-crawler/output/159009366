电脑/网络 编程语言 C/C++ 
在C语言中，if(a==1&&b++=2)是什么意思？
none
fail
4
若a=1并且b=2（执行该步操作后，b的值加1为3）。<br /><br />逻辑运算符是根据表达式的值来返回真值或是假值。其实在C语言中没有所谓的真值和假值，只是认为非0为真值，0为假值。<br />  符号 功能<br />  && 逻辑与<br />  || 逻辑或<br />  ! 逻辑非<br />  当表达式进行&&运算时，只要有一个为假，总的表达式就为假，只有当所有都为真时，总的式子才为真。当表达式进行||运算时，只要有一个为真，总的值就为真，只有当所有的都为假时，总的式子才为假。逻辑非(!)运算是把相应的变量数据转换为相应的真&#47;假值。若原先为假，则逻辑非以后为真，若原先为真，则逻辑非以后为假。<br />  还有一点很重要，当一个逻辑表达式的后一部分的取值不会影响整个表达式的值时，后一部分就不会进行运算了。例如：<br />  a=2,b=1;<br />  a||b-1;<br />  因为a=2，为真值，所以不管b-1是不是真值，总的表达式一定为真值，这时后面的表达式就不会再计算了。<br /><br />这是一类特殊的运算符，自增运算符++和自减运算符--对变量的操作结果是增加1和减少1。例如：<br />  --Couter;<br />  Couter--;<br />  ++Amount;<br />  Amount++;<br />  看这些例子里，运算符在前面还是在后面对本身的影响都是一样的，都是加1或者减1，但是当把他们作为其他表达式的一部分，两者就有区别了。运算符放在变量前面，那么在运算之前，变量先完成自增或自减运算；如果运算符放在后面，那么自增自减运算是在变量参加表达式的运算后再运算。这样讲可能不太清楚，看下面的例子：<br />  num1=4;<br />  num2=8;<br />  a=++num1;<br />  b=num2++;<br />  a =++num1;这总的来看是一个赋值，把++num1的值赋给a，因为自增运算符在变量的前面，所以num1先自增加1变为5，然后赋值给a，最终a也为5。b=num2++;这是把num2++的值赋给b，因为自增运算符在变量的后面，所以先把num2赋值给b，b应该为8，然后num2自增加1变为 9。<br />  那么如果出现这样的情况我们怎么处理呢？<br />  c=num1+++num2;<br />  到底是c=(num1++)+num2;还是c=num1+(++num2);这要根据编译器来决定，不同的编译器可能有不同的结果。所以我们在以后的编程当中，应该尽量避免出现上面复杂的情况。
http://zhidao.baidu.com/question/163081641.html?qbl=relate_question_0
http://zhidao.baidu.com/question/93724249.html?qbl=relate_question_1
http://zhidao.baidu.com/question/233379478.html?qbl=relate_question_2
http://zhidao.baidu.com/question/255704013.html?qbl=relate_question_3
http://zhidao.baidu.com/question/1367760939211356939.html?qbl=relate_question_4
