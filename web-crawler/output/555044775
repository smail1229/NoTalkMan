电脑/网络 编程语言 C/C++ 
C语言编程，如何自动生成一个二维数组
none
fail
0
程序主要通过malloc函数动态生成数组，srand和rand函数配合生成随机数据，代码如下，<br />&#47;&#47;程序功能，实现自定义m*n二维数组，随机生成给定范围max-min的数组元素<br />#include&lt;stdio.h&gt;<br />#include &lt;stdlib.h&gt;<br />#include &lt;time.h&gt; <br /><br />void main()<br />{ <br />int i=0,j=0;<br />int m=0,n=0;&#47;&#47;数组维数<br />int max=0,min=0;&#47;&#47;数组数据范围 <br />int **p=NULL;&#47;&#47;二维指针，存放m*n个元素<br />int tmp;<br />printf(&quot;请输入数组维数m和n:&quot;);<br />scanf(&quot;%d %d&quot;,&m,&n);<br />printf(&quot;请输入数组元素最大最小值max和min:&quot;);<br />scanf(&quot;%d %d&quot;,&max,&min);<br />if(max&lt;min)&#47;&#47;保证max大于min <br />{<br />tmp=max;<br />max=min;<br />min=max;<br />}<br />p=(int**)malloc(m*sizeof(int*));&#47;&#47;先分配m个一维指针<br />if(NULL==p)<br />exit(1);<br />for (i = 0; i &lt; n ; i++)<br />{<br />p[i] = (int*)malloc(n*sizeof(int));&#47;&#47;为m个一维指针分配n个整型大小的空间<br />if (NULL==p[i])<br />exit(1);<br />}<br />srand(time(NULL));<br />for(i=0;i&lt;m;i++)<br />for(j=0;j&lt;n;j++)<br />p[i][j]=rand()%(max-min+1)+min;<br />printf(&quot;%d*%d二维数组为：&#92;n&quot;,m,n);<br />for(i=0;i&lt;m;i++)<br />{   <br />for(j=0;j&lt;n;j++)<br />printf(&quot;%d&#92;t&quot;,p[i][j]);<br />printf(&quot;&#92;n&quot;);  <br />}<br /><br />for (i = 0; i &lt; n; i++)<br />{<br />free(p[i]);<br />p[i]=NULL;<br />}<br />free(p);<br />p=NULL;<br />}<br /><br />void *malloc( size_t size );如果分配成功则返回指向被分配内存的指针，指针指向一个大小为size的内存空间；如果错误发生返回NULL。<br />一般srand和rand配合使用产生伪随机数序列。rand函数在产生随机数前，需要系统提供的生成伪随机数序列的种子，rand根据这个种子的值产生一系列随机数。如果系统提供的种子没有变化，每次调用rand函数生成的伪随机数序列都是一样的。srand(unsigned seed)通过参数seed改变系统提供的种子值，从而可以使得每次调用rand函数生成的伪随机数序列不同，从而实现真正意义上的“随机”。通常可以利用系统时间来改变系统的种子值，即srand(time(NULL))，可以为rand函数提供不同的种子值，进而产生不同的随机数序列。
http://zhidao.baidu.com/question/555478268.html?qbl=relate_question_0
http://zhidao.baidu.com/question/79055365.html?qbl=relate_question_1
http://zhidao.baidu.com/question/9166720.html?qbl=relate_question_2
http://zhidao.baidu.com/question/532653304.html?qbl=relate_question_3
http://zhidao.baidu.com/question/559958561.html?qbl=relate_question_4
