电脑/网络 编程语言 C/C++ 
C语言中函数如何返回字符串？
none
这种方式来表示; <br />else dd[50]=&quot;，如果我没有猜错的话，你需要使用strcpy(dd;; <br />else if(a==b||b==c||a==c) <br />dd[50]=&quot,&quot。但你的程序在主程序中是要求输入三边.h&gt，要不在函数内定义一个字符型指针char *p;，把DD的地址给它;不等边三角形&quot，你是判断三角形是等边;等边三角形“）,int b，等腰还是不等边，函数返回的指针应该是char;，建议楼主仔细在书中找找; 这种情况的出现，需要判断三边是否能构成三角形后再调用函数来判断为何种三角形，不是指针，从严密性来讲; <br />里面dd[50]=&quot; <br />if(a==b==c) <br />dd[50]=&quot; <br />return dd，传回去是没有用的，再return p;等边三角形&quot。<br />  第二你的程序错误百出。<br />  第三;<br />  第四，在头文件上要加上#include&lt,在声明函数和定义函数处改成char<br />  第五;等边三角形&quot，在函数中<br />int *pd(int a;等腰三角形&quot，看哪本C语言书里有这种表示方法;string，dd是地址,int c) <br />{ <br />char dd[50];
27
<p>C语言中实现函数返回字符串，首先要确定函数返回的字符串地址的来源，一般分为四种方式：</p><ol><li><p>函数形参带进来的地址</p></li><li><p>静态局部变量地址</p></li><li><p>局部变量地址，必须在函数中用malloc（）函数进行地址分配</p></li><li><p>采用全局变量地址</p></li></ol><p>参考代码：</p><p>void &nbsp;func1( char *s ) &nbsp;//通过形参返回字符串</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;strcpy( s, &quot;hello&quot;);</p><p>}</p><p>char * func1_1( char *s ) //另一种写法</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;strcpy( s, &quot;hello&quot;);<br /></p><p>&nbsp;&nbsp;&nbsp;&nbsp;return s ; //返回形参地址，方便程序调用<br /></p><p>}</p><p>char * func2( void )&nbsp;</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;static char s[100]; //不能是非静态变量，否则，子函数结束，局部变量被释放，调用者得到一个无效的地址值。<br /></p><p>&nbsp;&nbsp;&nbsp;&nbsp;strcpy( s, &quot;hello&quot;);<br /></p><p>&nbsp;&nbsp;&nbsp;&nbsp;return s ; //返回静态局部变量地址，由调用者采用相应的指针变量接收返回值，得到字符串数据。<br /></p><p>}</p><p>char * func3( void )</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;char *s ;<br /></p><p>&nbsp;&nbsp;&nbsp;&nbsp;s=(char *)malloc( 100 );<br /></p><p>&nbsp;&nbsp;&nbsp;&nbsp;strcpy( s, &quot;hello&quot;);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;return s ; //返回s值，该地址需要调用者去free()释放。</p><p>}</p><p>//定义全局变量</p><p>char globle_buf[100];</p><p>void func4( void )</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;strcpy( globle_buf, &quot;hello&quot;);<br /></p><p>}</p><p>char * func4_1( char *s ) //另一种写法</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;strcpy( globle_buf, &quot;hello&quot;);<br /></p><p>&nbsp;&nbsp;&nbsp;&nbsp;return globle_buf ; //返回全局变量地址，方便程序调用<br /></p><p>}</p>
http://zhidao.baidu.com/question/319400070.html?qbl=relate_question_0
http://zhidao.baidu.com/question/92965182.html?qbl=relate_question_1
http://zhidao.baidu.com/question/128466074.html?qbl=relate_question_2
http://zhidao.baidu.com/question/23636785.html?qbl=relate_question_3
