电脑/网络 编程语言 C/C++ 
C语言的基本类型在内存中怎么储存的？
none
按指数形式存储老谭的书上有; <br />小数部分占的位（bit）数愈多，精度愈高.14159在内存中的存放形式如下。<br />指数部分占的位数愈多：<br />+ 。<br />实数3：<br />实型数据一般占4个字节（32位）内存空间.314159                      1<br />数符      小数部分                    指数<br />其中，数的有效数字愈多，则能表示的数值范围愈大。<br /><br />基础加强哟：&#61548
4
<ol><li><p>基本类型在内存中都是以字节，也就是二进制的方式储存的。</p><p>不同的类型，所占的字节数不同。普遍来说，字节数越大，该类型所表示的数据范围越大，精度越高。</p></li><li><p>以double和float类型举例说明在内存中怎么储存的：</p><p>从存储结构和算法上来讲，double和float是一样的，不一样的地方仅仅是float是32位的，double是64位的，所以double能存储更高的精度。<br /><br />任何数据在内存中都是以二进制（0或1）顺序存储的，每一个1或0被称为1位，而在x86CPU上一个字节是8位。比如一个16位（2 字节）的short int型变量的值是1000，那么它的二进制表达就是：00000011 11101000。由于Intel CPU的架构原因，它是按字节倒 序存储的，那么就因该是这样：11101000 00000011，这就是定点数1000在内存中的结构。<br /><br />目前C/C++编译器标准都遵照IEEE制定的浮点数表示法来进行float,double运算。<br /><br />这种结构是一种科学计数法，用符号、指数和 尾数来表示，底数定为2――即把一个浮点数表示为尾数乘以2的指数次方再添上符号。<br /><br />下面是具体的规格：<br /><br />类型&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 符号位 阶码&nbsp; 尾数&nbsp; 长度<br />float&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8&nbsp;&nbsp;&nbsp;&nbsp; 23&nbsp;&nbsp;&nbsp; 32<br />double&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp; 11&nbsp;&nbsp;&nbsp; 52&nbsp;&nbsp;&nbsp; 64<br />临时数&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp; 15&nbsp;&nbsp;&nbsp; 64&nbsp;&nbsp;&nbsp; 80<br /><br />由于通常C编译器默认浮点数是double型的，下面以double为例： 共计64位，折合8字节。<br /><br />由最高到最低位分别是第63、62、61、……、0位： 最高位63位是符号位，1表示该数为负，0正； 62-52位，一共11位是指数位； 51-0位，一共52位是尾数位。<br /><br />按照IEEE浮点数表示法，下面将把double型浮点数38414.4转换为十六进制代码。<br /><br />把整数部和小数部分开处理:整数部直接化十六进制：960E。小数的处理: 0.4=0.5*0+0.25*1+0.125*1+0.0625*0+…… 实际上这永远算不完！这就是著名的浮点数精度问题。所以直到加上前面的整数部分算够53位就行了（隐藏位技术：最高位的1 不写入内存）。<br /><br />如果你够耐心，手工算到53位那么因该是：38414.4(10)=1001011000001110.0110101010101010101010101010101010101(2)<br /><br />科学记数法为：1.001……乘以2的15次方。指数为15！ 于是来看阶码，一共11位，可以表示范围是-1024 ~ 1023。因为指数可以为负，为了便于计算，规定都先加上1023，在这里， 15+1023=1038。<br /><br />二进制表示为：100 00001110 符号位：正―― 0 ！ 合在一起（尾数二进制最高位的1不要）： 01000000 11100010 11000001 11001101 01010101 01010101 01010101 01010101 按字节倒序存储的十六进制数就是： 55 55 55 55 CD C1 E2 40。</p></li></ol>
http://zhidao.baidu.com/question/245342994.html?qbl=relate_question_0
http://zhidao.baidu.com/question/213123606.html?qbl=relate_question_1
http://zhidao.baidu.com/question/134307732.html?qbl=relate_question_2
http://zhidao.baidu.com/question/8895463.html?qbl=relate_question_3
http://zhidao.baidu.com/question/7911403.html?qbl=relate_question_4
