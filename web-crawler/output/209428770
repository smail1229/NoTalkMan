电脑/网络 编程语言 C/C++ 
C语言编程（数据结构）:表达式求值
-，输入一个表达式自动求值（+就是运行后，*，谢谢了``<br />一定要附带基本思路，&#47，本人对C很不懂; 自动区分先后算法）
<br /> 将输入的字符串先将其小数点以前的部分复制到temp[]数组中,i);<br />}<br /><br />/)<br /> {<br />  start=1;.;<br />  printf(&quot;*计算整数部分*&#47: s[i+1]=s[i]-s[i+1];=&#39。<br /> 传入值p若为3<br /> 则当前符号的数组位置为3,int p) <br /> <br />输入参数，没有不符合规定的字符;<br />     move(f;*将小数部分计算出来*/<br />  sum=good(str)，存入num中;/<br />     break.3*15+8-(3&#47.h&gt: enter &#39;<br />     break;<br />    while(k&gt：<br /> char *c ：<br /> char *f ;operator error，则将括号内的字符串存入另一字符数组中;0&#39;)<br />    {<br />     number[i]=&#39:<br /> 无<br />功能;<br />    num=0。<br />***************************************************************************/;*即把乘和除号的位置用后面的加和减号填充*/<br />  case &#39,p=0;<br />  scanf(&quot.5+(2*3/9&#39;<br />  }<br /><br /> f[fi]=&#39。如3.s[len-1]=s[len]  因为数值比运算符多一个, 表示出现错误.266667<br />enter expression：<br />enter expression;<br /><br />#include&lt;<br />  }<br /><br />  if(*c==&#39;<br /><br /> if(p;<br />    break：<br /> 将当前已经完成运算的运算符消去;*&#39，再将其依<br /> 次存入doulbe s[i]中;<br /> double a=1，<br /> 若有小数点;<br />    exit(0);)<br />      {<br />      k++, there is not have correct bracket &#39;;<br />  {<br />  k=0;0&#39: cc--;()&#39;;+&#39;0&#39;2+1))*2+(3。 然后根据先乘除;**************************************************************************<br />double convnum(char *c)<br />输入参数，为－1;<br />   case&#39;<br />}<br />/**************************************************************************<br />void  move(char *f;,&quot;&#92;<br /> <br /> while(1)<br /> {<br />  printf(&quot;<br />  f=-1, double *s;  /<br /> }<br /> printf(&quot,i);)<br />   k++!&quot;6=384：<br /> 将输入的字符串中的数字分别调用convnum(char *c)函数进行数值变换; in number;<br />     s[i+1]=s[i]/-&#39;:<br />   case&#39;-&#39;<br /> double s[80];<br />   default.0，其位置指针i=0*&#47!error;; / &#47。<br />有简单的输入错误检测; /&#92; &#47.2*3-5)/stdlib;<br />     if(*c==&#39。<br />**************************************************************************/ || *c==&#39;<br />     move(f;<br /> for(i=p;*将整数部分复制到temp[]中*/<br /><br />void  move(char *f;<br />     jj--: 运算符数组<br /> double *s。<br />功能。<br />返回参数;).&#39:   /<br />     jj--;;*有括号!&#92,之外的其他字符，表示已经把括号里的内容全部复制到g[100]中了*&#47。<br /> 若没有;**************************************************************************<br />double good(char *c)<br />输入参数: s[i+1]=s[i]+s[i+1];<br />  else if(*c==&#39;<br />}<br /><br />&#47,i); || <br />   *c==&#39，<br /> 然后如果遇到括号;;<br />  }<br /> temp[tempi]=&#39;2+1))*2+(3;*&#39;)  /<br /> char temp[100]，则表示输入错误*/; || <br />   *c==&#39;)<br />    { number[i]=&#39;;<br />    s[si++]=good(g);&#39;<br />     s[i+1]=s[i]*s[i+1]:<br />    number[i++]=*c;**************************************************************************<br />int check(char *c)<br />输入参数;/&#39;string;.5+(12,i 保存number里的字符位置*/*完成一个数字的复制; i&lt,len=0;6(输入)<br />3;;););)&#39;)&#39;exit&#39,sum);<br /> int si=0.3*15+8-(3/) || *c==&#39: 字符串字符符合规定;0)<br /> {<br />  switch(f[i])<br />  {<br />  case &#39;<br /> <br /> len=strlen&copy,s, there have the char not the math expression char;len;*保存当前所有的数的一个堆栈*&#47。*/<br />}<br /><br />void main()<br />{<br /> char str[100]: 输入的字符串<br />返回参数,int p)  <br />{<br /> int i=0;<br /> char f[80].5+(12:计算结果将放入s[0]中<br />功能.;-&#39.;<br />  <br />  switch(*c)<br />   {<br />   case &#39:由数字和小数点组成的字符;0&#39;*当前字符为+-乘除时则表示*/*正负符号指示器，将加减乘除运算符依次存入字符串符号数组 char f[i]中,表式字符串符合规定;<br />   return 0;<br />      }<br />     }<br />    g[num-1]=&#39;<br /> double sum=0;<br /> int num=0,str;<br />  if(p==0)<br />   break,i=0。有完整的说明和<br />注释*&#47!=0)<br /> {<br />  printf(&quot!&#92; end of program<br />3:<br />    f[fi++]=*c; i++)   &#47:<br />     i++;<br />   break。<br />做了一个下午;<br />    if(*(c-1);i&gt;;*加减符号数量*/*用于exit函数*/0&#39,s;0&#39!=&#39;<br />   {<br />    printf(&quot：<br /> char *c ;)<br />      {<br />      k--;<br /> while(cc&gt。<br /> 返回最终结果;exit&#39;input error.;*&#39: enter &#39;<br />    }<br />    break;*当p==1 和k==0时;*保存符号的位置指针*/ || *c==&#39;<br />}<br /><br />例，然后用此<br /> good(char *c) 递归函数进行递归运算;<br /> }<br /> for(i=start;<br />   case &#39。<br />***************************************************************************/*取得数值字符串;<br /> f[len-1]=&#39;<br />     i=0;0&#39;* 若k=1则表示有一对括号*&#47.;(float)s[i+1]，用以转换成double型的数值,s;<br />   num+=(a*(c[i]-48)),len=strlen(f)。<br />返回参数;&#39;0&#39!=&#39，此数为负数*/<br />    <br />    if(*(c+1)==&#39;+&#39;<br />    }<br />    break;len;<br />int check(char *c)<br />{<br /> int k=0;<br />     break;;)&#39;*用于字符串操作*//);<br />     g[num]=*c;<br /> }<br /> if(k;) <br />   {<br />   p=i; i--)<br />  {<br />  num=num+(a*(temp[i]-48))，并调用convnum转换成double*/*&#39; end of program<br />china(输入)<br />input error。<br />***************************************************************************/<br /> for(i=len-1!&#92.h&gt;/-&#39: enter &#39;*num保存新括号内的字符数;; /<br /><br />  c++，再对整数部分进行计算:  当前运算符数组位置;<br />  p=check(str);<br /> int fi=0.0;   &#47,i);&#92，若为1则为正数;<br /> int p=1;&#92;);<br />  default..;<br /> while(*c;): enter &#39;);*库文件包含*&#47：<br /> s[0];n&quot;*如果有多余的小数点.。结果存入s[0]中;<br /> return num;<br /> <br /> if(c[0]==&#39;<br />   }<br />  temp[tempi++]=c[i];0&#39;&#92;;/(&#39!=&#39, there have the char not the math expression char;;<br />  }<br /> }<br /><br /> i=0;<br />  printf(&quot;;<br />     move(f: 数值数组<br /> int p.;&#92;<br />  }<br /><br /> num=num*f;<br /> }<br /> s[i]=s[i+1]; /%s=%f&quot;<br /> int tempi=0;(&#39.f[len-2]=f[len-1]  f[len-1]=&#39;<br /> int f=1;<br />   }<br />   a=a*0;0)<br /> {<br />  switch(f[i])<br />  {<br />  case &#39;<br /><br />  if(p==0)<br />   continue,);0)<br />     {<br />     c++;*将已经运算过的符号;+&#39;*一个新的字符表达式进行递归调用good函数计算;<br />double good(char *c)  /exit&quot;i++) /=0;<br /> int cc=0.;<br />#include&lt;<br />  f[i]=f[i+1];<br />     num++;<br /> while(jj&gt;input error，也就是小数部分先进行计算;<br />  p=strcmp(str;<br />{      /<br />   }<br />  <br />  c++，则将小数点之后的数值;<br />  }<br /> }<br /><br /> return s[0]：<br /> 检查字符串中有否除了 0-9; / )<br />  {<br /><br />  }<br />  else<br />  {<br />   printf(&quot;<br /> int k=0; &#47,str)!=0)<br /> {<br />  for(i=p+1;%s&quot，同时将数值数组的位置调整以进行下一次运算;<br />  s[i]=s[i+1];<br /><br />&#47, double *s,*;<br /> int i=0;(&#39; /)<br />     cc++,number[30]：<br /> num;<br />  return 0，后加减的顺序对已<br /> 存入数组的数值根 据存入字符串符号数组的运算符进行运算;&#92;n&quot;len：<br /> 0;n&quot; i++)<br />  {<br />  if(c[i]==&#39。一定要用我这个噢;<br />double convnum(char *c)<br />{<br /> double num=0;; end of program&#92;<br /><br /> while(*c!<br />enter expression;enter expression;<br />   {<br />   if(c[i]==&#39;<br />   }<br /> }<br /><br /> a=1; || *c==&#39;&#92;*g;<br />      }<br />     else if(*c==&#39:<br />     printf(&quot;*可递归函数*/，其位置指针num=0*/<br />#include&lt;<br />     break:即将进行运算的字符串型数学表达式：字符串中有不符合规定的字符<br /> 1: cc--; i&lt，*/<br /> int start=0,number保存一个数的所有字符*&#47,s，则将当前括号作用范围内的全部字符保存;*保存所有的符号的堆栈*&#47：<br /> char *c,/*完成一个括号内容的复制;  &#47.2*3-5)/<br />     break;<br />  a*=10.,-;<br />  default!&#92.h&gt;5)<br />返回参数;i&lt;<br />     move(f;&#92; &#47.&#39;)&#39;&#39;<br />     break;;*乘除符号数量*/;)<br />   k--，则返回0;<br /><br /> len=strlen(temp);<br />     s[si++]=convnum(number); /<br /><br /> i=0;stdio;=&#39; ||  *c==&#39;0&#39;n&quot;*保存数字位置指针*/), +,保存当前的表达式串;<br />    k++，则返回1，作为*//<br />    <br />     s[si++]=convnum(number);)<br /> {<br />  if((*c&gt; && *c&lt，<br /> 如果有;<br />    else<br />     jj++;)/<br />    if(*c==&#39,(;<br />  case &#39.<br /> f[3]=f[3+1]，值加上小数部分的值:<br />   case &#39:返回转换好的值;n&quot;<br /> }<br /> return 1;<br /> int jj=0:   /;<br />  num=0;n&quot;&#92;<br /> char g[100];           &#47.1，空出来的位置用后面的符号来填充.&#39;there is more that one dot &#39;(&#39;exit&#39;&#92;      <br /> {      /<br /> s[i]=s[i+1].;0&#39; || *c==&#39;exit&#39; /good bye/.&#39.0,值存入num中<br /> 计算完成后.<br />功能;*在TC2 和 VC6下都可以顺利运行; end of program<br />exit(输入)<br />good bye
6
none
http://zhidao.baidu.com/question/1988341.html?qbl=relate_question_0
http://zhidao.baidu.com/question/78656803.html?qbl=relate_question_1
http://zhidao.baidu.com/question/355596856.html?qbl=relate_question_2
http://zhidao.baidu.com/question/96251963.html?qbl=relate_question_3
http://zhidao.baidu.com/question/23953116.html?qbl=relate_question_4
