电脑/网络 编程语言 C/C++ 
用C语言编程：sum=1+2*3+4*5*6+7*8*9*10+……  共n项，n由键盘输入
none
= 0，以上sum的结果是倒序;<br />  else<br />   temp = (*p - &#39;<br /> return ReverseStr(sum);%d&quot; i;n&quot;k&lt;<br /> }<br /> /0&#39,tmp2[MAX]; <br /> <br /> &#47, j;, 10); p &lt;<br /> }<br /> /<br />  len = len1 &gt;;/<br />  *q = *p;/<br /> int len2 = strlen(s2);&#47, ch; j &gt;<br /> &#47，所以需要把逆置过来<br /> return ReverseStr(sum);返回结果,q--)<br /> {<br />  ch = *q;/<br /> memset(sum;) + (s1[i] - &#39; k++;这里把进位加入到积字符串中<br />    sum[m ++] += flag % 10;}; <br />for(i = 1，指针的值就交换<br /> for (p = str;/ 10; + *q - &#39, sum1=0;对temp的结果取余存入积字符串中<br />   sum[m ++] = temp % 10 + &#39;stdio，就算超大整数.<br /><br />#include &lt;<br /> //相加2;/9&#39;sum1=%I64d&#92;就成为整数9, (len1 * len2 + 1) * sizeof(char))，还是能存放, temp = 0? len1; s1) <br />   temp = (*q - &#39;= s1 || q &gt;<br /> char *sum, char *s2)<br />{<br /> int len; (p &gt;<br /> for(i = 1;m字符串的位数<br /> int len1 = strlen(s1);sum1=%s&#92，一般在15左右; j--)    <br />  {<br />   &#47? len1;把相加的结果添加到和字符串中<br />  *r = temp % 10 + &#39;&#47,sum[m]可能不为&#39; i &lt, sum1);返回结果<br /> return str, &#39;<br />   <br />   / 10;/<br /> }<br /> printf(&quot; <br />} <br />sum1 +=sum, r++)<br /> {<br />  if(p &lt;<br />}<br /><br />void main()<br />{<br /> int i;/ <br />__int64 sum = 1,长度暂时设成len1*len2<br /> char *sum = (char *) malloc((len1 * len2 + 1) * sizeof(char));设置积字符串结束标记<br /> sum[m] = &#39;<br /> *r = &#39.h&gt;) + flag;0&#39; i++ )<br /> { <br />  strcpy(sum;0&#39;/0&#39, *r;&#47, n;<br />    //<br /><br /> scanf(&quot; k++;/) + flag: len2; i &gt, k;<br />  <br />  / i--)<br /> {<br />  /1&quot;; i++ ) <br />{ <br />sum = 1.h&gt;保存相加结果的进位<br />  flag = temp /n&quot;m是积字符串的下标<br />  m = len1 - 1 - i;&#92;;0&#39;) + flag; p--;0&quot;<br /> <br /> /<br />  }<br /> }<br /> &#47, 0x00; k &lt;0&#39, n.h&gt，所以按照乘法原则进行运算<br />  for(int j = len2 - 1;给和字符串分配空间; <br />} <br /><br />printf(&quot, tmp1);<br />#define MAX 1000<br /><br />/string，思想;<br /> int flag = 0,tmp1[MAX];字符串逆置;stdio;0&#39;;; &#47, q--;！ <br /><br />#include &lt;), *q;<br />   <br />   /<br /> /<br /> / s2) <br />   temp = (*p - &#39，因为有进位;,j++) <br />{ <br />sum *=j, m = 0;相乘<br />char *BigIntMulti(char *s1;;是否有进位<br />   flag = temp &#47, q = str + len;) + flag, &n);从字符串末尾进行处理<br /> for(int i = len1 - 1; q; len2 ,用指针处理<br />char *BigIntPlus(char *s1; <br /><br />void main() <br />{ <br />int i;<br /> sum = (char *) malloc((len + 2) * sizeof(char));最高一位可能有进位<br />  while(flag)<br />  {<br />   /0&#39;&#47这个数很大;%d&quot, *q = s2 + len2 - 1;;) * (s2[j] - &#39;/<br /> j = 1, tmp2);0&#39;, &quot; <br />  /0&#39; <br />j = 1;/ <br /> r = sum: len2, sum1).h&gt;1&quot;///<br /> int len2 = strlen(s2);0&#39;取最大字符串长度<br /> len = len1 &gt;0&#39, char *s2)<br />{<br /> int len;temp保存 s1[i]*s2[j]的积和进位之和;处理最后一位进位<br /> if(flag) *r++ = flag % 10 + &#39;<br />   strcpy(sum：在字符串末尾分别设一指针<br />/= n;<br />}<br />/&#47, BigIntMulti(sum;/};-&#39;分配的空间初始化为0<br /> memset(sum;= n;<br />  } <br />  &#47, k，在之后的while循环之中设置的<br />   temp = (sum[m] - &#39;当两指针没有相遇;<br /> int flag = 0; p++;对s2字符串也是从末尾进行处理, sum1[MAX] ={&quot;/<br />  strcpy(sum1, (len + 2) * sizeof(char));/<br /><br />  /0&#39;<br />#include &lt;/<br /> / i &lt;i; <br />scanf(&quot, BigIntPlus(sum1, sum)), j++)<br />  {<br />   itoa(j;= s2);<br />  else if( q &lt;取余<br />    flag &#47, tmp));<br />#include &lt, &n);<br />}<br /><br />&#47, temp;<br /> int len1 = strlen(s1);<br />  }<br />  strcpy(tmp2;<br /> char sum[MAX] = {&quot, tmp; len2 ，这个n可以大到200; <br />for (k=0;<br />   strcpy(tmp1;<br />  *p = ch;<br /> char tmp[MAX];0&#39，也顶不过n=20, j; <br />}<br /><br />另外写了两个大数相乘和相加的函数,字符串&#39;0&#39;<br />  for (k = 0;= 10;两指针指向的值交换<br />char *ReverseStr(char *str)<br />{<br /> char *p;&#92;<br /> for(char *p = s1 + len1 - 1;去字符串长度<br /> int len = strlen(str) - 1;=0;stdlib
3
none
http://zhidao.baidu.com/question/212677665.html?qbl=relate_question_0
http://zhidao.baidu.com/question/205594647.html?qbl=relate_question_1
http://zhidao.baidu.com/question/50920420.html?qbl=relate_question_2
http://zhidao.baidu.com/question/561342426.html?qbl=relate_question_3
http://zhidao.baidu.com/question/331496329.html?qbl=relate_question_4
