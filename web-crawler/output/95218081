电脑/网络 编程语言 C/C++ 
C语言如何动态分配存储空间
none
fail
1
#include &lt;stdio.h&gt;<br />#include &lt;malloc.h&gt;<br />#include &lt;memory.h&gt;<br />#include &lt;string.h&gt;<br />&#47;* 工程功能:简单学生管理系统，<br />包含插入，删除，修改操作，采用链表数据模型   <br />*&#47;<br />typedef struct student{<br />    int Num;&#47;&#47;学号<br />    char name[12];&#47;&#47;姓名<br />    int age;&#47;&#47;年龄<br />    struct student* pNext;&#47;&#47;指向下一条记录的指针<br />}STUDENT,*PSTUDENT;<br />#define LEN    sizeof(STUDENT)<br />PSTUDENT pHeader,pNail;&#47;&#47;头结点指针,尾结点指针<br />int n=0;&#47;&#47;学生信息条数<br />void PrintMenu();&#47;&#47;打印操作菜单<br />bool ExistStudent(int Num);&#47;&#47;是否存在学号为Num的学生信息，有则返回true,否则,false<br />void InsertInfo();&#47;&#47;插入学生信息到末尾<br />bool DeleteInfo(int Num);&#47;&#47;删除学号为Num的学生信息<br />bool UpdateInfo(int Num,PSTUDENT pNewInfo);&#47;&#47;修改学号为Num的学生信息为pNewInfo指向的内容<br />void PrintInfo();&#47;&#47;打印所有学生信息<br />int main()<br />{<br />    PrintMenu();<br />    int iSel=0;<br />    while(1)<br />    {<br />        printf(&quot;输入操作选择:&quot;);<br />        scanf(&quot;%d&quot;,&iSel);<br />        switch(iSel)<br />        {<br />        case 0:<br />            return 0;<br />        case 1:<br />            PrintInfo();<br />            continue;<br />        case 2:<br />            InsertInfo();<br />            continue;<br />        case 3:<br />            {<br />                int num=0;<br />                printf(&quot;输入要删除的学生学号:&quot;);<br />                scanf(&quot;%d&quot;,&num);<br />                if(DeleteInfo(num))<br />                    printf(&quot;删除成功!&#92;n&quot;);<br />                else<br />                    printf(&quot;删除失败!&#92;n&quot;);<br />                continue;<br />            }<br />        case 4:<br />            {<br />                int num=0;<br />                printf(&quot;输入要修改的学生学号:&quot;);<br />                scanf(&quot;%d&quot;,&num);<br />                STUDENT stu={0};<br />                printf(&quot;输入该学生的新信息(空格分隔):&quot;);<br />                scanf(&quot;%d%s%d&quot;,&stu.Num,&stu.name,&stu.age);<br />                if(UpdateInfo(num,&stu))<br />                    printf(&quot;修改成功!&#92;n&quot;);<br />                else<br />                    printf(&quot;修改失败!&#92;n&quot;);<br />                continue;<br />            }<br />            continue;<br />        default:<br />            continue;<br />        }<br />    }<br />    return 0;<br />}<br />void PrintMenu()<br />{<br />    printf(&quot;******操作菜单******&#92;n&quot;);<br />    printf(&quot;* 1. 打印学生信息&#92;n&quot;);<br />    printf(&quot;* 2. 添加学生信息&#92;n&quot;);<br />    printf(&quot;* 3. 删除学生信息&#92;n&quot;);<br />    printf(&quot;* 4. 修改学生信息&#92;n&quot;);<br />    printf(&quot;* 0. 退出系统&#92;n&quot;);<br />    printf(&quot;*********************&#92;n&quot;);<br />}<br /><br />void InsertInfo()<br />{   <br />    &#47;&#47;pCur为当前输入的信息结构指针,pNail为前一个学生信息结构指针<br />    PSTUDENT pCur;   <br />    printf(&quot;请输入学生记录(各元素用空格分隔,输入学号为0时停止)&#92;n&quot;);<br />    while(true)<br />    {       <br />        pCur = (PSTUDENT)malloc(LEN);<br />        memset(pCur,NULL,LEN);<br />        printf(&quot;==&gt;:&quot;);<br />        scanf(&quot;%d%s%d&quot;,&pCur-&gt;Num,pCur-&gt;name,&pCur-&gt;age);<br />        if(pCur-&gt;Num==0)<br />            break;<br />        if(ExistStudent(pCur-&gt;Num))<br />        {<br />            printf(&quot;该学生信息已经存在！&#92;n&quot;);<br />            break;<br />        }<br />        if(n==0)<br />        {<br />            &#47;&#47;初始化头结点和保存前一个结构指针           <br />            pNail=pHeader=pCur;<br />            pHeader-&gt;pNext=NULL;<br />        }<br />        else<br />        {<br />            pNail-&gt;pNext=pCur;<br />            pNail=pCur;<br />            pCur-&gt;pNext=NULL;<br />        }<br />        n++;<br />    }               <br />}<br />bool DeleteInfo(int Num)<br />{<br />    PSTUDENT pStu=pHeader;<br />    if(!pStu)<br />        return false;   <br />    for(pStu;pStu!=NULL;pStu=pStu-&gt;pNext)<br />    {<br />        if(Num==pStu-&gt;Num)<br />        {<br />            &#47;&#47;要删除的为头结点<br />            pHeader=pStu-&gt;pNext;<br />            return true;<br />        }<br />        else if(pStu-&gt;pNext&&Num==pStu-&gt;pNext-&gt;Num)<br />        {<br />            pStu-&gt;pNext=pStu-&gt;pNext-&gt;pNext;<br />            return true;<br />        }<br />    }<br />    return false;<br />}<br />bool UpdateInfo(int Num,PSTUDENT pNewInfo)<br />{<br />    PSTUDENT pStu=pHeader;<br />    if(!pStu)<br />        return false;<br />    if(Num!=pNewInfo-&gt;Num&&ExistStudent(pNewInfo-&gt;Num))<br />        return false;<br />    for(pStu;pStu!=NULL;pStu=pStu-&gt;pNext)<br />    {<br />        if(Num==pStu-&gt;Num)<br />        {<br />            pStu-&gt;Num=pNewInfo-&gt;Num;<br />            memset(pStu-&gt;name,0,sizeof(pStu-&gt;name));<br />            strcpy(pStu-&gt;name,pNewInfo-&gt;name);<br />            pStu-&gt;age=pNewInfo-&gt;age;<br />            return true;<br />        }<br />    }<br />    return true;<br />}<br />void PrintInfo()<br />{<br />    PSTUDENT pStu=pHeader;<br />    if(!pStu)<br />    {<br />        printf(&quot;没有学生信息!&#92;n&quot;);<br />        return;<br />    }<br />    for(pStu;pStu!=NULL;pStu=pStu-&gt;pNext)<br />        printf(&quot;学号:%d 姓名:%s 年龄:%d&#92;n&quot;,pStu-&gt;Num,pStu-&gt;name,pStu-&gt;age);<br />}<br />bool ExistStudent(int Num)<br />{<br />    PSTUDENT pStu=pHeader;<br />    if(!pStu)<br />        return false;<br />    for(pStu;pStu!=NULL;pStu=pStu-&gt;pNext)<br />    {<br />        if(Num==pStu-&gt;Num)<br />            return true;<br />    }<br />    return false;<br />}
http://zhidao.baidu.com/question/488041359.html?qbl=relate_question_0
http://zhidao.baidu.com/question/88058701.html?qbl=relate_question_1
http://zhidao.baidu.com/question/506836010.html?qbl=relate_question_2
http://zhidao.baidu.com/question/225116018.html?qbl=relate_question_3
http://zhidao.baidu.com/question/415513388.html?qbl=relate_question_4
