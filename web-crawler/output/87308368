电脑/网络 编程语言 C/C++ 
谁能帮我注释下这个c语言程序？
),starty; <br />initgraph(&gdriver,n=1; <br />#include&lt; <br />static int starty=100; <br />cleardevice().h&gt; <br />while(; <br />#include&lt,angle，所以越详细越好 <br />#define PI 3;(maxx-70)&#47;R,starty+60).h&gt; <br />if((int)(-1*angle)%360&lt; <br />closegraph(); <br />angle=-1*(n*step)&#47; <br />setbkcolor(BLUE).h&gt;dos！ <br />我C语言不好;dalta) <br />angle-=dalta;conio; <br />} <br />if(l==0) <br />{ <br />--n;stdlib,starty谁能帮我注释下这个c语言程序;step) <br />l=0！ <br />中间******为一段我了解的所以不发了.1415926 <br />#define step 3 <br />#define R 10 <br />#include&lt!kbhit()) <br />{ <br />if(l==1) <br />{ <br />n++.h&gt; <br />if(n==1)l=1; <br />void *image; <br />delay(10000),image),starty; <br />static int startx=5,&gmode;PI*180;graphics; <br />if(n&gt; <br />} <br />free(image);&quot,l=1;time。<br />帮我解释清楚逻辑部分就可以<br />速度快或非常全的话肯定追加100分; <br />angle=-1*(n*step)&#47,gmode; <br />if((int)(-1*angle)%360&lt.h&gt; <br />#include&lt; <br />image=(unsigned char *)malloc(size),startx+n*step+60;R&#47,starty+60; <br />int size,XOR_PUT);PI*180&#47; <br />#include&lt; <br />size=imagesize(startx; <br />main() <br />{ <br />int gdriver=DETECT,image; <br />double dalta=20;dalta) <br />angle-=dalta,&quot; <br />putimage(startx+n*step; <br />} <br />******<br />getimage(startx+n*step; <br />int maxx; <br />maxx=getmaxx(),startx+60？急用
 &#47,starty+20),10); <br />circle(startx+n*step+45,starty+15); &#47,starty+50,startx+60,startx+n*step+37; <br />#include&lt;step) <br />l=0,starty; <br />angle=-1*(n*step)/* dalta步长;* 运动的小车动画c程序 *&#47。 *&#47,starty+15); <br />if((int)(-1*angle)%360&lt,starty; <br />#include&lt.h&gt; <br />rectangle(startx+n*step+23,starty+40;PI*180&#47,startx+n*step+43,10),starty+20;* 循环; &#47，轮子顺时针转动;* 将startx+n*step; <br />} <br />if(l==0)/ <br />{ <br />int gdriver=DETECT,image;* 关闭图形工作模式 */ <br />{ <br />if(l==1)// &#47,XOR_PUT); <br />double dalta=20.h&gt,starty+20);* 释放内存空间 */&quot; <br />{ <br />n++,startx+n*step+49,angle，设置屏幕为图形界面模式; <br />putimage(startx+n*step，显示新的位图; <br />if(n&gt;* 小车向右运动;* 其实质就是位图数据不停的写入内存然后再在不同的位置(n在变化)写到屏幕上 */* 清屏 *//* 将startx，调用图形驱动程序;&#47,starty.h&gt; /R/ <br />line(startx+n*step+45;* 判断小车的运动方向;graphics; <br />line(startx+n*step+58;* 以下为画小车的形状 */ <br />line(startx+n*step+17;/ <br />pieslice(startx+n*step+45;* 开辟大小为size字节的指向字符的内存空间 */ <br />rectangle(startx+n*step+27,GREEN);* 设定图形驱动类型为,startx+n*step+46;PI*180,starty+50,startx+n*step+60,starty+50,angle;* 将上面getimage()函数保存的图像输出显示; <br />if(n==1)l=1,starty+2，产生动态效果 */ <br />int size; /* l==0小车向左运动 轮子逆时针转动; <br />setbkcolor(BLUE); <br />getimage(startx+n*step,starty; <br />image=(unsigned char *)malloc(size),starty+15,starty+20); <br />line(startx+n*step+15; <br />line(startx+n*step+33; <br />initgraph(&gdriver,starty+2,3)，产生动态效果*&#47,starty+10,starty+20); <br />closegraph(),starty+38),l==1小车向右运动,angle,startx+n*step+42,10),starty; <br />if((int)(-1*angle)%360&lt,starty+40); <br />while(,starty,angle-dalta;(maxx-70)&#47,starty;* 延时10000毫秒 *&#47,starty+20,&quot; &#47,starty+10,startx+n*step+37,starty+20);tc++绘图功能函数必需的头文件 *&#47,starty+50; <br />maxx=getmaxx()，画扇形; <br />circle(startx+n*step+15，选择相应的驱动程序; <br />int maxx; <br />bar(startx+n*step+17,starty+20); <br />line(startx+n*step,starty+50,3); <br />circle(startx+n*step+15,startx+n*step+60; / /&#47?*/* tc/dalta) <br />angle-=dalta; <br />delay(10000); <br />setcolor(GREEN);dalta) <br />angle-=dalta,starty+2); /conio,startx+n*step+60,startx+n*step+58，按任一键退出循环 *&#47.h&gt,startx+n*step+14,l=1;* 设置动画的起始位置(小车的起点位置) *&#47,starty+60指定区域的位图数据存到内存以地址image开始的size个字节中 */ <br />setfillstyle(SOLID_FILL; <br />line(startx+n*step+17; <br />} &#47,10););* 小车初始时刻是向右运动 *&#47已基本搞定,starty+60确定的位图图像范围(字节数)用整数size保存起来 *&#47!kbhit()) / <br />main() &#47,startx+n*step+45，显示模式)无需设置 */ <br />free(image);* 设置屏幕背景色为蓝色 */ <br />static int starty=100;stdlib.1415926 <br />#define step 3 <br />#define R 10 <br />#include&lt,angle-dalta,starty+60，画扇形,starty+2，angle画小车车轮上的填充扇形; <br />void *image,startx+n*step+23,starty+5; <br />} <br />line(startx+n*step+15,n=1： <br />#define PI 3;&#47,starty+40);/dos;* 初始化图形界面,starty+60); <br />line(startx+n*step+2;time; <br />#include&lt,starty+20)，自动测试显示卡类型,startx+n*step+60，以判断小车是否运动到屏幕的左右边界 *&#47,starty,starty+50; <br />pieslice(startx+n*step+15; / <br />angle=-1*(n*step)/ <br />line(startx+n*step，此方式下gmode(整数; <br />line(startx+n*step+27，利用人眼的视觉暂停效应产生小车在运动的效果 *&#47，角度angle的绝对值增加; <br />size=imagesize(startx.h&gt; <br />#include&lt; <br />line(startx+n*step+43,&gmode,starty+40,gmode; <br />static int startx=5,starty); <br />setcolor(GREEN),starty+20); <br />circle(startx+n*step+45;* getmaxx()用来获得屏幕的最大x坐标，即清除旧的位图,startx+n*step+33：DETECT(自动检测)，角度angle的绝对值减小，用来显示小车车轮的动态滚动效果 *&#47，这里使用的是异或xor运算输出方式,startx+60,startx+n*step+2;R,image),starty+22; <br />cleardevice(),startx+n*step+11; <br />{ <br />--n。如下
3
none
http://zhidao.baidu.com/question/176319429176120964.html?qbl=relate_question_0
http://zhidao.baidu.com/question/582973098108381045.html?qbl=relate_question_1
http://zhidao.baidu.com/question/1795821826372865587.html?qbl=relate_question_2
http://zhidao.baidu.com/question/154740115.html?qbl=relate_question_3
http://zhidao.baidu.com/question/1366156321759016819.html?qbl=relate_question_4
