电脑/网络 编程语言 C/C++ 
求C语言库函数大全!请大家帮忙!谢了!
none
h.COM等),并返回这个数,int *sign) <br />将浮点数value转换成字符串并返回该字符串 <br />char *fcvt(double value、p;)、&#92;A&#39; <br /><br />int findnext(struct ffblk *ffblk) 取匹配finddirst的文件;a&#39:;,1=B;,char *pathname;）变成当前的工作目录,&#39， <br />所指定的函数将具有某种操作能力 <br />有后缀 p时;C; &#39,char *envp[]) <br />spawn函数族在mode模式下运行子程序pathname,char *direc) 此函数返回指定驱动器的当前工作目录名称 <br />drive 指定的驱动器(0=当前,错误返回0 <br />long atol(char *nptr) 将字符串nptr转换成长整型数,否则返回0 <br />int isupper(int ch) 若ch是大写字母(&#39;-&#39,NULL,char *arg1:等); &#47:&#92,错误返回0 <br />int atoi(char *nptr) 将字符串nptr转换成整型数,int radix) <br />将无符号整型数value转换成字符串并返回该字符串,char *string, <br />long strtol(char *str;&#92,成功返回0 <br />void fumerge(char *path,返回一个整数(0=A，函数中被传递的参数个数不固定, 指定参数envp可以传递给子程序,否则返回0 <br />int isalnum(int ch) 若ch是字母(&#39.h; ┃ <br />┃ char ff_name[13]。 <br />v时;) <br />int toupper(int ch) 若ch是小写字母(&#39,x为弧度 <br />double hypot(double x.h)=========== <br />void abort() 此函数通过调用具有出口代码3的_exit写一个终止信息于stderr;a&#39, 并返回这个数,char *pathname;)返回非0值,…;&#92,…;a&#39,…,double retval) <br />用户修改数学错误返回信息函数(没有必要使用) <br />unsigned int _clear87() 清除浮点状态字并返回原来的浮点状态 <br />void _fpreset() 重新初使化浮点数学程序包 <br />unsigned int _status87() 返回浮点状态字 <br />============目录函数（原型声明所在头文件为dir;-&#39,NULL,并返回这个数,否则返回0 <br />int iscntrl(int ch) 若ch是作废字符(0x7F)或普通控制字符(0x00-0x1F) <br />返回非0值,char *envp[]) <br />int spawnvp( int mode,3=C等) <br />direc 保存指定驱动器当前工作路径的变量 成功返回0 <br />char *getcwd(char *buf:&quot;z&#39;a&#39;) <br />int _tolower(int ch) 返回ch相应的小写字母(&#39,int *sign) <br />将浮点数value转换成字符串并返回该字符串 <br />char *gcvt(double value, 函数传递的参数个数不固定、p,允许改变子程序运行环境,char *string;)返回相应的大写字母(&#39;&#92,int exp);*DOS保留字*&#47,NULL) <br />int execle( char *pathname.h;0&#39; <br />findfirst(&quot,char *argv[];-&#39, <br />;) <br />返回非0值,char *ext) <br />此函数将文件名path分解成盘符drive(C,否则返回0 <br />int isdigit(int ch) 若ch是数字(&#39、process;a&#39,envp[])传递给子程序、A;)返回相应的小写字母(&#39,错误返回0 <br />long atol(char *nptr) 将字符串nptr转换成长整型数，函数中被传递的参数个数固定,扩展名ext(,double *arg1p;x的反正切tan-1(x)值;f&#39;)返回非0值;9&#39;A&#39,int *eptr) 将双精度数value分成尾数和阶 <br />double atof(char *nptr) 将字符串nptr转换成浮点数并返回这个浮点数 <br />double atoi(char *nptr) 将字符串nptr转换成整数并返回这个整数 <br />double atol(char *nptr) 将字符串nptr转换成长整数并返回这个整数 <br />char *ecvt(double value;┃ <br />┃ char ff_attrib,2=C等) <br />int setdisk(int drive) 设置要使用的驱动器drive(0=A,…;-&#39,radix为转换时所用基数 <br />double atof(char *nptr) 将字符串nptr转换成双精度数,char *argv[];z&#39;*,radix为转换时所用基数 <br />double atof(char *nptr) 将字符串nptr转换成双精度数; /z&#39,2=B;Z&#39,int *decpt,char *arg0:&#92.h,否则返回0 <br />int isspace(int ch) 若ch是空格(&#39;-&#39;z&#39;z&#39;0&#39;-&#39,char *string,char *dir, <br />char *argn,水平制表符(&#39,由以下字符代表 <br />┏━━━━━━━━━┳━━━━━━━━┓ <br />┃FA_RDONLY 只读文件┃FA_LABEL 卷标号┃ <br />┃FA_HIDDEN 隐藏文件┃FA_DIREC 目录 ┃ <br />┃FA_SYSTEM 系统文件┃FA_ARCH 档案 ┃ <br />┗━━━━━━━━━┻━━━━━━━━┛ <br />例. <br /><br />int system(char *command) 将MSDOS命令command传递给DOS执行 <br />======转换子程序（函数原型所在头文件为math,并返回这个数, 函数利用DOS的PATH查找子程序文件 <br />l时;*文件属性*/-&#39,写缓冲区的输出(等待输出);,y的x为弧度 <br />double cos(double x) 返回x的余弦cos(x)值;);) <br />int _toupper(int ch) 返回ch相应的大写字母(&#39,char **endptr;Z&#39;)或数字(&#39, <br />否则返回0 <br />int tolower(int ch) 若ch是大写字母(&#39;&#92,char *argn,char *string,int *sign) <br />将浮点数value转换成字符串并返回该字符串 <br />char *gcvt(double value;,double y) 返回xy的值 <br />double pow10(int p) 返回10p的值 <br />double sqrt(double x) 返回x的开方 <br />double acos(double x) 返回x的反余弦cos-1(x)值,char *pathname; /&#92、e添加到spawn后,char *envp[]) <br />int execvp( char *pathname, <br />文件名name(TC;BC&#92、,成功返回0 <br />char *mktemp(char *template) 构造一个当前目录上没有的文件名并存于template中 <br />char *searchpath(char *pathname) 利用MSDOS找出文件filename所在路径,char *arg0, <br />int toascii(int c) 返回c相应的ASCII <br />int tolower(int ch) 若ch是大写字母(&#39,x为弧度 <br />double tan(double x) 返回x的正切tan(x)值,char *arg1,否则返回0 <br />int isascii(int ch) 若ch是字符(ASCII码中的0-127)返回非0值.EXE;n&#39,NULL) <br />int spawnlpe(int mode.EXE,并返回buf的指针 <br />char *ultoa(unsigned long value;z&#39;Z&#39;A&#39,int *decpt:等),NULL) <br />int spawnle( int mode;r&#39;LIB等);0&#39,char *argv[]) <br />int execvpe(char *pathname,int base)将字符串str转换成长整型数;f&#39;A&#39,并返回buf的指针 <br />char *ultoa(unsigned long value,并返回这个数,否则返回0 <br />int isgraph(int ch) 若ch是可打印字符(不含空格)(0x21-0x7E)返回非0值,double y) 返回x&#47,成功返回0 <br />int rmdir(char *pathname) 删除一个目录pathname;-&#39,char *drive;-&#39,无返回值 <br /><br />int spawn…运行子程序 <br />int spawnl( int mode,char *drive;C.h）================ <br />int chdir(char *path) 使指定的目录path（如;*文件长度*&#47, <br />char *argn,int ndigit,int n, <br />char *argn, <br />double *arg2p;9&#39,子程序使用本程序的环境,char *arg1,char *pathname,int base)将字符串str转换成长整型数.h）=========== <br />int abs(int i) 返回整型参数i的绝对值 <br />double cabs(struct complex znum) 返回复数znum的绝对值 <br />double fabs(double x) 返回双精度参数x的绝对值 <br />long labs(long n) 返回长整型参数n的绝对值 <br />double exp(double x) 返回指数函数ex的值 <br />double frexp(double value,未找到文件返回NULL <br />===========进程函数(原型声明所在头文件为stdlib,否则返回0 <br />int ispunct(int ch) 若ch是标点字符(0x00-0x1F)返回非0值、e添加到exec后; ┃ <br />┃ int ff_ftime, <br />x和y为直角边的长度,x为弧度 <br />double atan2(double y,char **endptr,iint n) 此函数取当前工作目录并存入buf中,char *buf) <br />将数value转换成字符串并存于buf中;WPS&#92;A&#39;出口函数&quot,char *arg1,char *envp[]) <br />int execlp( char *pathname,char *envp[]) <br />int spawnlp( int mode;)返回非0值;TC,否则返回0 <br />int islower(int ch) 若ch是小写字母(&#39,char *arg1,char *arg0,char *argv[],char *argv[];) <br />返回非0值,此函数使用DOS的PATH变量,int *eptr) 返回value=x*2n中x的值;Z&#39,并返回这个数;z&#39,并返回这个数,char *arg0;&#92;Z&#39,否则返回0 <br />int isxdigit(int ch) 若ch是16进制数(&#39,double *iptr)将双精度数value分解成尾数和阶 <br />double fmod(double x, <br />返回可使用驱动器总数 <br />int mkdir(char *pathname) 建立一个新的目录pathname,回车符(&#39,NULL,char *envp[]) <br />int execv( char *pathname，函数传递指定参数envp,char **endptr)将字符串str转换成双精度数,定义如下;Z&#39,int *sign) <br />将浮点数value转换成字符串并返回该字符串 <br />char *fcvt(double value,错误返回0 <br />double strtod(char *str、float,后缀l,成 <br />功返回0 <br />int findfirst(char *pathname,double c[])从参数产生一个多项式 <br />double modf(double value; <br />ffblk为指定的保存文件信息的一个结构,char *pathname,int radix) <br />将长整型数value转换成字符串并返回该字符串;v&#39;-&#39; &#47,int radix) <br />将整数value转换成字符串存入string。 <br />e时， <br />无后缀e时;-&#39、&#92,double y) 返回直角三角形斜边的长度(z),radix为转换时所用基数 <br />char *itoa(int value,…、stdlib,否则返回0 <br />int isprint(int ch) 若ch是可打印字符(含空格)(0x20-0x7E)返回非0值,x为弧度 <br />double asin(double x) 返回x的反正弦sin-1(x)值,arg2: <br />┏━━━━━━━━━━━━━━━━━━┓ <br />┃struct ffblk ┃ <br />┃{ ┃ <br />┃ char ff_reserved[21];*文件日期*&#47, <br />char *argn,int attrib)查找指定的文件,int radix) <br />将整数value转换成字符串存入string,1=B,&#39;), <br />int matherr(struct exception *e) <br />用户修改数学错误返回信息函数(没有必要使用) <br />double _matherr(_mexcep why,radix为转换时所用基数 <br />char *ltoa(long value. <br />e时;,char *pathname,char *argv[]) <br />int spawnvpe(int mode;) <br />int toupper(int ch) 若ch是小写字母(&#39,错误返回0 <br />int atoi(char *nptr) 将字符串nptr转换成整型数;t&#39,NULL,并分别存入相应的变量中,int *decpt，并将参数 <br />arg0(arg1、v,&ff、WPS等);-&#39,int radix) <br />将长整型数value转换成字符串并返回该字符串,char *fun,x为弧度 <br />double atan(double x) 返回x的反正切tan-1(x)值.h,char *dir,arg2，函数可以利用DOS的PATH变量查找子程序文件;)返回非0值;;LIB等),char *name;),z2=x2+y2 <br />double ceil(double x) 返回不小于x的最小整数 <br />double floor(double x) 返回不大于x的最大整数 <br />void srand(unsigned seed) 初始化随机数发生器 <br />int rand() 产生一个随机数并返回这个数 <br />double poly(double x;a&#39;TXT&quot;WPS&quot, <br />并返回这个数;) <br />========数学函数（原型声明所在头文件为math;&#92、v,int radix) <br />将无符号整型数value转换成字符串并返回该字符串、stdlib、, <br />long strtol(char *str;);-&#39,关闭所有文件,x为弧度 <br />double sin(double x) 返回x的正弦sin(x)值,扩展名ext(。 <br /><br />void _exit(int status)终止当前程序,char *arg1,char *arg0; ┃ <br />┃} ┃ <br />┗━━━━━━━━━━━━━━━━━━┛ <br />attrib为文件属性;-&#39,后缀l,路径dir(&#92;A&#39, <br />char *argn,char *ext) <br />此函数通过盘符drive(C,x为弧度 <br />double tanh(double x) 返回x的双曲正切tanh(x)值;-&#39,&#39,char *buf) <br />将数value转换成字符串并存于buf中,NULL) <br />int execlpe(char *pathname,n存贮在eptr中 <br />double ldexp(double value,&#39;F&#39.错误返回NULL <br />int getdisk() 取当前正在使用的驱动器,如&quot,1=A;-&#39,char *string,int ndigit;&#92.h）======== <br />char *ecvt(double value; ┃ <br />┃ int ff_fdate,直到n个字 <br />节长为为止:;y的余数 <br />double frexp(double value. <br />v时;*文件名*&#47, 并返回这个数. <br />int getcurdir(int drive,int ndigit;-&#39、dos.出错返回-1 <br />mode为运行模式 <br />mode为 P_WAIT 表示在子程序运行完后返回本程序 <br />P_NOWAIT 表示在子程序运行时同时运行本程序(不可用) <br />P_OVERLAY表示在本程序退出后运行子程序 <br />在spawn函数族中,…;-&#39;)返回相应的大写字母(&#39, 函数传递的参数个数固定,char **endptr)将字符串str转换成双精度数,char *argv[]) <br />int execve( char *pathname、ctype,int *decpt,char *pathname，允许改变子进程的环境;Z&#39.h.COM等)组成一个文件名 <br />存与path中,char *string; /z&#39int isalpha(int ch) 若ch是字母(&#39.h,char *envp[]) <br />exec函数族装入并运行程序pathname、string, <br />文件名name(TC、A, <br />并返回这个数;a&#39;a&#39,int ndigit,struct ffblk *ffblk。无返回值 <br />int exec…装入和运行其它程序 <br />int execl( char *pathname,2=C等)， <br />所指定的函数将具有某种操作能力 <br />有后缀 p时,成功 <br />返回0 <br />pathname为指定的目录名和文件名,char *arg1;a&#39, <br />并调用任何寄存器的&quot。 <br />l时;BC&#92,int ndigit，子进程使用当前程序的环境;-&#39;A&#39;TC.h,出错返回-1 <br />在exec函数族中;A&#39,char *argv[]) <br />int spawnve( int mode;-&#39;)返回相应的小写字母(&#39,radix为转换时所用基数 <br />char *itoa(int value,int ndigit,char *arg0,x为弧度 <br />double sinh(double x) 返回x的双曲正弦sinh(x)值,radix为转换时所用基数 <br />char *ltoa(long value. <br />int fnsplit(char *path,char *arg0;*文件时间*&#47、float, <br />走纸换行(&#39,路径dir(&#92;9&#39,但不清理现场 <br />void exit(int status) 终止当前程序、WPS等).wps&quot;)返回非0值;A&#39,FA_RDONLY),换行符(&#39,垂直制表符(&#39,错误返回0 <br />double strtod(char *str,char *arg1,…,envp[])传递给子程序,并将参数 <br />arg0(arg1,argv[],double x) 返回y&#47: <br />struct ffblk ff; ┃ <br />┃ long ff_fsize. <br />当无后缀e时,x为弧度 <br />double cosh(double x) 返回x的双曲余弦cosh(x)值， <br />并异常终止程序;-&#39,…; /Z&#39,char *pathname,char *name,char *arg0,char *envp[]) <br />int spawnv( int mode,argv[]; 返回value*2exp的值 <br />double log(double x) 返回logex的值 <br />double log10(double x) 返回log10x的值 <br />double pow(double x
90
none
http://zhidao.baidu.com/question/6643484.html?qbl=relate_question_0
http://zhidao.baidu.com/question/110069635.html?qbl=relate_question_1
http://zhidao.baidu.com/question/58353099.html?qbl=relate_question_2
http://zhidao.baidu.com/question/533763224.html?qbl=relate_question_3
http://zhidao.baidu.com/question/370538994.html?qbl=relate_question_4
