电脑/网络 编程语言 C/C++ 
C语言关于表达式求值
none
fail
fail
这是我以前做的一个表达式求值的程序，要求和实现的功能是一样的： <br />#include&lt;stdio.h&gt; <br />#include &lt;string.h&gt; <br />#include &lt;conio.h&gt; <br />#define PLUS 0 <br />#define MINUS 1 <br />#define POWER 2 <br />#define DIVIDE 3 <br />#define LEFTP 4 <br />#define RIGHP 5 <br />#define STARTEND 6 <br />#define DIGIT 7 <br />#define POINT 8 <br />#define NUM 7 <br />#define NO 32767 <br />#define STACKSIZE 20 <br />char a[]={&#39;+&#39;,&#39;-&#39;,&#39;*&#39;,&#39;&#47;&#39;,&#39;(&#39;,&#39;)&#39;,&#39;#&#39;}; <br />int PriorityTable[7][7]={{ 1, 1,-1,-1,-1, 1, 1}, <br />{ 1, 1,-1,-1,-1, 1, 1}, <br />{ 1, 1, 1, 1,-1, 1, 1}, <br />{ 1, 1, 1, 1,-1, 1, 1}, <br />{-1,-1,-1,-1,-1, 0, NO}, <br />{ 1, 1, 1, 1,NO, 1, 1}, <br />{-1,-1,-1,-1,-1,NO, 0}}; <br />int menu(void); <br />void InputExpression(char str[]) <br />{ <br />int len; <br />printf(&quot;Input expression string:&#92;n&quot;); <br />scanf(&quot;%s&quot;,str); <br />len=strlen(str); <br />str[len]=&#39;#&#39;; <br />str[len+1]=&#39;&#92;0&#39;; <br />} <br />int GetCharType(char ch) <br />{ <br />int i; <br />for(i=0;i&lt;NUM;i++) if(ch==a[i]) return(i); <br />if(ch&gt;=&#39;0&#39; && ch&lt;=&#39;9&#39;) return(DIGIT); <br />if(ch==&#39;.&#39;) return(POINT); <br />return(-1); <br />} <br />double Operate(double a,int theta,double b) <br />{ <br />double x; <br />switch(theta) <br />{ <br />case 0:x=a+b;break; <br />case 1:x=a-b;break; <br />case 2:x=a*b;break; <br />case 3:x=a&#47;b;break; <br />} <br />return (x); <br />} <br />int EXCUTE(char *str,double *Result) <br />{ <br />int pp,strlength,topTr,topNd,CharType,OPTR[STACKSIZE]; <br />double number,temp,OPND[STACKSIZE]; <br />OPTR[0]=STARTEND; <br />topTr=1; <br />topNd=0; <br />pp=0; <br />while((str[pp])) <br />{ <br />CharType=GetCharType(str[pp]); <br />switch(CharType) <br />{ <br />case -1: <br />return(0); <br />case DIGIT: <br />number=0; <br />while(str[pp]&gt;=&#39;0&#39; && str[pp]&lt;=&#39;9&#39;) <br />{ <br />number=number*10+(str[pp]-48); <br />pp++; <br />} <br />if(str[pp]==&#39;.&#39;) <br />{ <br />temp=10.0; <br />pp++; <br />while(str[pp]&gt;=&#39;0&#39; && str[pp]&lt;=&#39;9&#39;) <br />{ <br />number=number+(str[pp]-48)&#47;temp; <br />temp=temp*10; <br />pp++; <br />} <br />} <br />OPND[topNd]=number; <br />topNd++; <br />break; <br />case POINT: <br />number=0; <br />temp=10.0; <br />pp++; <br />while(str[pp]&gt;=&#39;0&#39; && str[pp]&lt;=&#39;9&#39;) <br />{ <br />number=number+(str[pp]-48)&#47;temp; <br />temp=temp*10; <br />pp++; <br />} <br />OPND[topNd]=number; <br />topNd++; <br />break; <br />case PLUS: <br />case MINUS: <br />case POWER: <br />case DIVIDE: <br />if(PriorityTable[OPTR[topTr-1]][CharType]==-1) <br />{ <br />OPTR[topTr]=CharType; <br />topTr++; <br />pp++; <br />} <br />else <br />{ <br />OPND[topNd-2]=Operate(OPND[topNd-2],OPTR[topTr-1],OPND[topNd-1]); <br />topNd--; <br />topTr--; <br />} <br />break; <br />case LEFTP: <br />OPTR[topTr]=CharType; <br />topTr++; <br />pp++; <br />break; <br />case RIGHP: <br />while(OPTR[topTr-1]!=LEFTP) <br />{ <br />if(OPTR[topTr-1]==STARTEND)return(0); <br />if(PriorityTable[OPTR[topTr-1]][CharType]==1) <br />{ <br />OPND[topNd-2]=Operate(OPND[topNd-2],OPTR[topTr-1],OPND[topNd-1]); <br />topNd--; <br />topTr--; <br />} <br />else <br />break; <br />} <br />topTr--; <br />pp++; <br />break; <br />case STARTEND: <br />while(OPTR[topTr-1]!=STARTEND) <br />{ <br />OPND[topNd-2]=Operate(OPND[topNd-2],OPTR[topTr-1],OPND[topNd-1]); <br />topNd--; <br />topTr--; <br />} <br />if(topNd==1) <br />{ <br />*Result=OPND[0]; <br />return(1); <br />} <br />else <br />return(0); <br />} <br />} <br />return(1); <br />} <br />void main() <br />{ int num,flag; <br />double result; <br />char str[256]; <br />str[0]=&#39;0&#39;; <br />while(1) <br />{ num=menu(); <br />switch(num) <br />{ <br />case 1: <br />InputExpression(str); <br />flag=0; <br />printf(&quot;%s&#92;n&quot;,str); <br />getchar(); <br />break; <br />case 2: <br />if(str[0]==&#39;0&#39;) <br />{ printf(&quot;Expression is Empty!&quot;); <br />getchar(); <br />break; <br />} <br />if(!EXCUTE(str,&result)) <br />{ printf(&quot;The expression has error!&#92;n&quot;); <br />getchar(); <br />} <br />else <br />{ printf(&quot;calulation has finished!&#92;n&quot;); <br />getchar(); <br />flag=1; <br />} <br />break; <br />case 3: <br />if(flag) <br />{ printf(&quot;#%s=%lf&#92;n&quot;,str,result); <br />getchar(); <br />} <br />break; <br />case 4: <br />break; <br />} <br />if(num==4) break; <br />} <br />} <br />int menu(void) <br />{ <br />int num; <br />printf(&quot;%20c1--input expression&#92;n&quot;,&#39; &#39;); <br />printf(&quot;%20c2--calculation expression&#92;n&quot;,&#39; &#39;); <br />printf(&quot;%20c3--print result&#92;n&quot;,&#39; &#39;); <br />printf(&quot;%20c4--Quit&#92;n&quot;,&#39; &#39;); <br />printf(&quot; please select 1,2,3,4:&quot;); <br />do <br />{ <br />scanf(&quot;%d&quot;,&num); <br />}while(num&lt;1 || num&gt;4); <br />return(num); <br />}
http://zhidao.baidu.com/question/454228492.html?qbl=relate_question_0
http://zhidao.baidu.com/question/6001567.html?qbl=relate_question_1
http://zhidao.baidu.com/question/210509677.html?qbl=relate_question_2
http://zhidao.baidu.com/question/27948817.html?qbl=relate_question_3
http://zhidao.baidu.com/question/122166751.html?qbl=relate_question_4
